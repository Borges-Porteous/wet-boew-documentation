[
    {
        "name" : "Special-case Deferred methods removed from jQuery.ajax",
        "category" : "Ajax",
        "description" : "The <code>jqXHR</code> object returned from <code>jQuery.ajax()</code> is a jQuery <code>Deferred</code> and has historically had three extra methods with names matching the arguments object of <code>success</code>, <code>error</code>, and <code>complete</code>. This often confused people who did not realize that the returned object should be treated like a <code>Deferred</code>. As of jQuery 3.0 these methods have been removed. As replacements, use the <code>Deferred</code> standard methods of <code>done</code>, <code>fail</code>, and <code>always</code>, or use the new <code>then</code> and <code>catch</code> methods for Promises/A+ compliance.",
        "search_text" : "<code>jqXHR.success | error | complete</code>",
        "fix_text" : "Use the <code>Deferred</code> standard methods of <code>done</code>, <code>fail</code>, and <code>always</code>, or use the new <code>then</code> and <code>catch</code> methods for Promises/A+ compliance.",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-special-case-deferred-methods-removed-from-jquery-ajax"
    },
    {
        "name" : "Cross-domain script requests must be declared",
        "category" : "Ajax",
        "description" : "When making a request via <code>jQuery.ajax()</code> or <code>jQuery.get()</code> for a script on a domain other than the one that hosts the document, you must now explicitly specify <code>dataType: \"script\"</code> in the options. This prevents the possibility of an attack where the remote site delivers non-script content but later decides to serve a script that has malicious intent. Since <code>jQuery.getScript()</code> explicitly sets <code>dataType: \"script\"</code> it is unaffected by this change.",
        "search_text" : "<code>.ajax( | .get(</code>",
        "fix_text" : "If jQuery.ajax() or jQuery.get() tries to grab a script on a domain other than the one that hosts the document, you must now explicitly specify <code>dataType: \"script\"</code> in the options.",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-cross-domain-script-requests-must-be-declared"
    },
    {
        "name" : "Hash in a URL is preserved in a jQuery.ajax() call",
        "category" : "Ajax",
        "description" : "The <code>jQuery.ajax()</code> method no longer strips off the hash in the URL if it is provided, and sends the full URL to the transport (xhr, script, jsonp, or custom transport). If the server at the other end of the connection cannot deal with a hash on a URL, strip it off before sending the request.",
        "search_text" : "<code>.ajax( </code>",
        "fix_text" : "This is not a potential issue because WET-BOEW doesn't communicate with any servers that can't handle a <code>#</code> in the URL",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-hash-in-a-url-is-preserved-in-a-jquery-ajax-call"
    },
    {
        "name" : ".removeAttr() no longer sets properties to false",
        "category" : "Attributes",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-removeattr-no-longer-sets-properties-to-false"
    },
    {
        "name" : "select-multiple with nothing selected returns an empty array",
        "category" : "Attributes",
        "description" : "Before jQuery 3.0, calling <code>.val()</code> on a <code>&lt;select multiple&gt;</code> element with no elements selected returned <code>null</code>. This was inconvenient since if at least one value was selected the return value would be an array. Also, if all options are disabled jQuery already returned an empty array. To improve consistency, the nothing-selected case now returns an empty array.",
        "search_text" : "<code>.val(</code>",
        "fix_text" : "<code>TODO</code>",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-select-multiple-with-nothing-selected-returns-an-empty-array"
    },
    {
        "name" : "jQuery 3.0 runs in Strict Mode",
        "category" : "Core",
        "description" : "Now that most of the browsers supported by jQuery 3.0 have <code>\"use strict\"</code>, jQuery is being built with this directive. Your code is not required to run in Strict Mode, so most existing code should not require any changes. The one case we encountered three years ago was that ASP.NET 4.0 used <code>arguments.caller.callee</code> to attempt tracing through call stacks in its <code>__doPostBack()</code> method. If you are still using a version of ASP.NET that still does this, keep using jQuery 2.x or earlier. Modern browsers support stack traces via <code>error.stack</code> so it should not ever be necessary to examine <code>arguments.caller.callee</code>.",
        "search_text" : "n/a",
        "fix_text" : "n/a",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-jquery-3-0-runs-in-strict-mode"
    },
    {
        "name" : "document-ready handlers are now asynchronous",
        "category" : "Core",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-document-ready-handlers-are-now-asynchronous"
    },
    {
        "name" : "jQuery.isNumeric() and custom .toString()",
        "category" : "Core",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-jquery-isnumeric-and-custom-tostring"
    },
    {
        "name" : "Deprecated .context and .selector properties removed",
        "category" : "Core",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-deprecated-context-and-selector-properties-removed"
    },
    {
        "name" : "Deprecated .size() removed",
        "category" : "Core",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-deprecated-size-removed"
    },
    {
        "name" : "Undocumented internal methods no longer exposed",
        "category" : "Core",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-undocumented-internal-methods-no-longer-exposed"
    },
    {
        "name" : "Return values on empty sets are undefined",
        "category" : "Core",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-return-values-on-empty-sets-are-undefined"
    },
    {
        "name" : ".data() names containing dashes",
        "category" : "Data",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-data-names-containing-dashes"
    },
    {
        "name" : "jQuery.Deferred is now Promises/A+ compatible",
        "category" : "Deferred",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-and-feature-jquery-deferred-is-now-promises-a-compatible"
    },
    {
        "name" : "jQuery.when() arguments",
        "category" : "Deferred",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-and-feature-jquery-when-arguments"
    },
    {
        "name" : "jQuery.when() progress notifications",
        "category" : "Deferred",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-jquery-when-progress-notifications"
    },
    {
        "name" : ".width(), .height(), .css(\"width\"), and .css(\"height\") can return non-integer values",
        "category" : "Dimensions",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-width-height-css-quot-width-quot-and-css-quot-height-quot-can-return-non-integer-values"
    },
    {
        "name" : ".outerWidth() or .outerHeight() on window includes scrollbar width/height",
        "category" : "Dimensions",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-outerwidth-or-outerheight-on-window-includes-scrollbar-width-height"
    },
    {
        "name" : ".show(), .hide(), and .toggle() methods now respect more stylesheet changes",
        "category" : "Effects",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-show-hide-and-toggle-methods-now-respect-more-stylesheet-changes"
    },
    {
        "name" : ".load(), .unload(), and .error() removed",
        "category" : "Event",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-load-unload-and-error-removed"
    },
    {
        "name" : ".on(\"ready\", fn) removed",
        "category" : "Event",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-on-quot-ready-quot-fn-removed"
    },
    {
        "name" : "event.pageX and event.pageY normalization removed",
        "category" : "Event",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-event-pagex-and-event-pagey-normalization-removed"
    },
    {
        "name" : "jQuery.event.props and jQuery.event.fixHooks removed",
        "category" : "Event",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-jquery-event-props-and-jquery-event-fixhooks-removed"
    },
    {
        "name" : "Delegated events with bad selectors throw immediately",
        "category" : "Event",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-delegated-events-with-bad-selectors-throw-immediately"
    },
    {
        "name" : ".wrapAll(function) only calls the function once",
        "category" : "Manipulation",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-wrapall-function-only-calls-the-function-once"
    },
    {
        "name" : "Invalid input to the .offset() method",
        "category" : "Offset",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-invalid-input-to-the-offset-method"
    },
    {
        "name" : "Behavior of :hidden and :visible",
        "category" : "Selector",
        "description" : "Lorem ipsum",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-behavior-of-hidden-and-visible"
    },
    {
        "name" : "jQuery(\"#\") and .find(\"#\") are invalid syntax",
        "category" : "Selector",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-jquery-quot-quot-and-find-quot-quot-are-invalid-syntax"
    },
    {
        "name" : "jQuery.param() no longer converts %20 to a plus sign",
        "category" : "Serialize",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-jquery-param-no-longer-converts-20-to-a-plus-sign"
    },
    {
        "name" : ".andSelf() removed, use .addBack()",
        "category" : "Serialize",
        "description" : "Lorem ipsum",
        "search_text" : "",
        "fix_text" : "",
        "href" : "https://jquery.com/upgrade-guide/3.0/#breaking-change-andself-removed-use-addback"
    }
]
